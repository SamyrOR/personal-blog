---
import { getCollection } from "astro:content";
import TagPosts from "@layouts/TagPosts.astro";
import getUniqueTags from "@utils/getUniqueTags";
import getPostsByTag from "@utils/getPostsByTag";
import type { GetStaticPathsOptions } from "astro";
import { SITE } from "@config";
import { LANGUAGES_KEYS } from "i18n/utils";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = await getCollection("blog", ({ data }) => !data.draft);

  let pages: any = [];
  for (let lang of LANGUAGES_KEYS) {
    let tags = getUniqueTags(posts, lang);
    let tagPages = tags.flatMap(({ tag, tagName }) => {
      const tagPosts = getPostsByTag(posts, tag, lang);
      return paginate(tagPosts, {
        params: { tag, lang },
        props: { tagName },
        pageSize: SITE.postPerPage,
      });
    });
    pages = [...pages, ...tagPages];
  }

  return pages;
}

const params = Astro.params;
const { tag, lang } = params;
const { page, tagName } = Astro.props;
---

<TagPosts {page} {tag} {tagName} {lang} />
